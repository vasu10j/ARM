 area     appcode, CODE, READONLY
     export __main
	 ENTRY 
__main  function		 
           
	   vldr.f32 s24, =100    
	   vldr.f32 s25, =100    ; moon centre @(100,100) and earth @ origin
	   
           vldr.f32 s15, =20    ; r1=20
	   vldr.f32 s19, =1    ; r1_inc=5
	   
	   vldr.f32 s20, =10    ; r2=10
	   vldr.f32 s21, =0.75    ; r2_inc=2
	   
	   
	   vldr.f32 s13, =0.314
	   
start  mov r3,#1
	   vldr.f32 s1, =0    ; (theta)
	   vldr.f32 s8, =0    ; (theta)
	   
loop1  

	   mov r4, #1
	   mov r5, #0
	   vldr.f32 s3, =2    ; increment by 2
	   
	   vldr.f32 s9, =1  ; for cos
	   
	   mov  r1,#1
	   mov r2,#0
	   
	   
	   vmul.f32 s2,s1,s1  ; x2
	    
repeat vmul.f32 s1,s1,s2    ; x3,x5,x7,x9..
	   vmul.f32 s9,s9,s2    ; x2,x4,x6,x8..
	   
	   add r1,r1,#1
	   add r4,r4,#2
	   add r5,r5,#2
	   
       	     
			 MOV r6,r4 
             MOV r7,#1 
fact         CMP r6, #1
             MUL r7, r6, r7
             SUB r6, r6, #1 
             BNE fact 
       
	   vmov s4,r6
	   vdiv.f32 s5, s1, s4
	   
	         MOV r8,r5 
             MOV r9,#1 
factorial    CMP r8, #1
             MUL r9, r8, r9
             SUB r8, r8, #1 
             BNE factorial 
			 
       vmov s14,r8   
	   vdiv.f32 s10, s9, s14
	   
	   and r2,r1,#1
	   cmp r2,#0
	   ITE EQ 
	   vsubeq.f32 s6,s6,s5 ; if odd then -x3/3 -x7/7 
	   vaddne.f32 s7,s7,s5 ; else  x5/5 +x9/9
	   
	   and r2,r1,#1
	   cmp r2,#0
	   ITE EQ 
	   vsubeq.f32 s16,s16,s10 ; if odd then -x3/3 -x7/7 
	   vaddne.f32 s17,s17,s10 ; else  x5/5 +x9/9
	   
	   cmp r1,#3      ; No of terms 
	   bne repeat
	   
	   
	   vadd.f32 s8,s8,s7  ; 
	   vadd.f32 s8,s8,s6  ; sin value in s8
  
       vldr.f32 s18, =1

       vadd.f32 s18,s18,s17  ; 
	   vadd.f32 s18,s18,s16  ; cos value in s18


;spiral_1 coordinates
           vmul.f32 s11,s15,s18  ; x1= r1.cos
	   vmul.f32 s12,s15,s8  ; y1= r1.sin
      
;spiral_2 coordinates
           vmul.f32 s22,s19,s18  ;   x2= 0 + r2.cos
	   vmul.f32 s23,s19,s8  ;    y2= 0 + r2.sin centre @ origin
           
	   vadd.f32  s26,s22,s24 ;   x2= Cx + r2.cos 
	   vadd.f32  s27,s23,s25 ;   y2= Cy + r2.sin centre @(Cx,Cy)
	   
	   vadd.f32 s1,s1,s13 
           vadd.f32 s8,s8,s13  	   
	   
	   vadd.f32 s15,s15,s19
	   vadd.f32 s20,s20,s21
	   
	   
	   add r3,r3,#1
	   	   
	   cmp r3,#11
	   beq start
	   
	   cmp r3,#11
	   bne loop1

stop b stop
endfunc
     end
	  
			         
     
stop b stop
endfunc
     end
		 
	
		 	  
		  
