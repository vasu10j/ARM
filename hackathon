 area     appcode, CODE, READONLY
     IMPORT printdata
     export __main
	 ENTRY 
__main  function
       
	   vldr.f32 s14, =100.0 
	   vldr.f32 s15, =100.0   ;centre_earth
	   
	   vldr.f32 s22, =600.0 
	   vldr.f32 s23, =600.0  ;centre_moon
	   
	   
	   vldr.f32 s20, =0     ; radius_earth
	   vldr.f32 s21, =0     ; radius_moon
	   
	   vldr.f32 s10, =0.314 ; theta_inc  (2pi/ number of points in one circle ie 0 t0 2pi)
	   vldr.f32 s16, =1 ; radius_inc_earth
	   vldr.f32 s19, =0.5 ; radius_inc_moon
	   
loop_no mov r8,#1	   
	   
start  mov r7,#1
	  add r8,r8,#1
	  vldr.f32 s1, =0   ;theta 
      
;///////////////////	  sin_calculation   ///////////////////
loop1  
	   mov  r4,#1
	   mov  r3,#1
	   
	   vmov.f32 s2,s1      ;initialise x 
	   vldr.f32 s7,=0      ; clears earlier sin result
	   vldr.f32 s6,=0 
	   
	   vmov.f32 s3,s1
	   vmul.f32 s4,s1,s1   ; initialise x2
	    
repeat vmul.f32 s3,s3,s4    ; x3,x5,x7,x9..
	   
	   add r3,r3,#1
	   add r4,r4,#2

    		 vmov.f32 s8,r4
             vcvt.f32.u32 s8,s8			 
			 vldr.f32 s9,=1
     		 vldr.f32 s5,=1 
fact         vcmp.f32 s8,s9
             vmul.f32 s5, s8, s5    ; s5 stores the factorial value
             vsub.f32 s8, s8, s9 
             vmrs APSR_nzcv, FPSCR
			 bne fact 
            
	   vdiv.f32 s6, s3, s5
	   
	   and r2,r3,#1
	   cmp r2,#0
	   ITE EQ 
	   vsubeq.f32 s7,s7,s6 ; if odd then -x3/3 -x7/7 
	   vaddne.f32 s7,s7,s6 ; else  x5/5 +x9/9
	   
	   cmp r3,#7      ; No of terms - 1
	   bne repeat
	   	   
	   vadd.f32 s7,s7,s2  ; sin value in s7 
       
	   
	   vldr.f32 s12,=1.57 ;pi/2
	   vldr.f32 s13,=4.71 ;3pi/2
	   
	   vmul.f32 s11,s7,s7 ; sin^2
	   vsub.f32 s11,s9,s11 ; 1-cos^2
	   vsqrt.f32 s11,s11 ; 
	   
	   vcmp.f32 s1,s12
	   vmrs APSR_nzcv, FPSCR
	   ble skip
	   bgt cond_1
cond_1 vcmp.f32 s1,s13
	   vmrs APSR_nzcv, FPSCR
	   bge skip
       blt negate	   
negate vneg.f32 s11,s11 ; invert the sign for cos if sin is positive

skip
	   vmul.f32 s17,s7,s20
	   vadd.f32 s17,s17,s14       ; y_earth
	   vmov.f32 r0,s17
	   BL printdata
	   
	   vmul.f32 s18,s11,s20
	   vadd.f32 s18,s18,s15       ; x_earth
	   vmov.f32 r0,s18
	   BL printdata
	   
	   vmul.f32 s7,s7,s21
	   vadd.f32 s7,s7,s22         ; y_moon
	   vmov.f32 r0,s7
	   BL printdata
	   
	   vmul.f32 s11,s11,s21
	   vadd.f32 s11,s11,s23         ; x_moon
	   vmov.f32 r0,s11
	   BL printdata
	    
;/////////////////////////////////////////////////////////////////	  
	   
	    vadd.f32 s20,s20,s16    ; increase radius_earth
		vadd.f32 s21,s21,s19    ; increase radius_moon
	    vadd.f32 s1,s1,s10      ; increase radian
	    
		cmp r8,#8               ; number of iterations
		beq over
		
	    add r7,r7,#1
	   	cmp r7,#21              ;number of points in one cycle  + 1
	    beq start
	   
	    cmp r7,#21
	    bne loop1
		
over      		
	   
stop b stop
endfunc
     end
		 
link to additional files: https://github.com/vasu10j/ARM_hackathon_otherfiles 
